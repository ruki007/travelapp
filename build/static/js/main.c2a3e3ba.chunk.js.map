{"version":3,"sources":["components/Header/Header.tsx","components/Footer/Footer.tsx","pages/Home/Home.tsx","pages/About/About.tsx","pages/login/login.tsx","firebase.js","pages/login/regist.tsx","pages/Home/Newplan.tsx","App.tsx","index.tsx"],"names":["Header","_jsxs","className","children","_jsx","href","Footer","Date","getFullYear","Home","Link","to","About","Login","email","setEmail","useState","password","setPassword","error","setError","navigate","useNavigate","onSubmit","async","event","preventDefault","auth","getAuth","user","signInWithEmailAndPassword","console","log","errorMessage","code","htmlFor","type","id","value","onChange","e","target","required","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getAnalytics","getFirestore","getStorage","Regist","confirmPassword","setConfirmPassword","createUserWithEmailAndPassword","then","userCredential","alert","catch","errorCode","message","errorMsg","name","placeholder","minLength","initialItemsToBring","checked","CreateTravelPlanPage","currentUser","uid","title","setTitle","startDate","setStartDate","endDate","setEndDate","members","setMembers","locationQuery","setLocationQuery","itemsToBring","setItemsToBring","budget","setBudget","isSaving","setIsSaving","saveError","setSaveError","handleSave","travelPlansCollection","collection","addDoc","destinations","createdBy","createdAt","updatedAt","isDraft","schedule","sharedWith","prefectureVisited","style","color","onBlur","trim","includes","map","member","onClick","removeMember","memberToRemove","filter","item","index","newItems","handleItemCheck","removeItem","indexToRemove","_","itemName","parseInt","disabled","App","Router","Routes","Route","path","element","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2a3e3ba.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css';\n\nconst Header: React.FC = () => {\n    return (\n        <header className=\"header\">\n            <h1 className=\"header-title\">My React App</h1>\n            <nav className=\"header-nav\">\n                <ul>\n                    <li><a href=\"/\">Home</a></li>\n                    <li><a href=\"/about\">About</a></li>\n                </ul>\n            </nav>\n        </header>\n    );\n};\n\nexport default Header;","import React from 'react';\nimport './Footer.css';\n\nconst Footer: React.FC = () => {\n    return (\n        <footer>\n            <p>&copy; {new Date().getFullYear()} Your Company. All rights reserved.</p>\n            <nav>\n                <a href=\"/privacy-policy\">Privacy Policy</a>\n                <a href=\"/terms-of-service\">Terms of Service</a>\n            </nav>\n        </footer>\n    );\n};\n\nexport default Footer;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Home.css';\n\nconst Home: React.FC = () => {\n    return (\n        <div className=\"home-container\">\n            <h1>トラベント~旅行予定管理アプリ~</h1>\n            <p>旅行計画を簡単に作成・管理できるアプリケーションです。</p>\n            \n            <div className=\"auth-buttons\">\n                <Link to=\"/login\" className=\"auth-link\">\n                    <button className=\"login-btn\">ログイン</button>\n                </Link>\n                <Link to=\"/regist\" className=\"auth-link\">\n                    <button className=\"regist-btn\">新規登録</button>\n                </Link>\n            </div>\n            \n            <div className=\"features\">\n                <h2>主な機能</h2>\n                <ul>\n                    <li>旅行計画の作成と管理</li>\n                    <li>行きたい場所のブックマーク</li>\n                    <li>旅程の共有</li>\n                    <li>予算管理</li>\n                </ul>\n            </div>\n        </div>\n    );\n};\n\nexport default Home;","import React from 'react';\nimport './About.css';\n\nconst About: React.FC = () => {\n    return (\n        <div className=\"about\">\n            <h1>About Us</h1>\n            <p>This is the about page of our application. Here you can find information about our project and team.</p>\n        </div>\n    );\n};\n\nexport default About;","import React, { useState } from 'react';\r\nimport { getAuth, signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nconst Login: React.FC = () => {\r\n  const [email, setEmail] = useState<string>('');\r\n  const [password, setPassword] = useState<string>('');\r\n  const [error, setError] = useState<string | null>(null);\r\n  const navigate = useNavigate(); // React Routerのフック\r\n\r\n  const handleLogin = async (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n    setError(null);\r\n\r\n    const auth = getAuth();\r\n    try {\r\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n      const user = userCredential.user;\r\n      console.log('ログイン成功:', user);\r\n      // ログイン成功後の処理 (例: ホーム画面へ遷移)\r\n      navigate('/dashboard'); // ログイン後はダッシュボードへ\r\n    } catch (error: any) {\r\n      console.error('ログイン失敗:', error);\r\n      let errorMessage = 'ログインに失敗しました。';\r\n      switch (error.code) {\r\n        case 'auth/invalid-email':\r\n          errorMessage = 'メールアドレスの形式が正しくありません。';\r\n          break;\r\n        case 'auth/user-not-found':\r\n          errorMessage = '登録されていないメールアドレスです。';\r\n          break;\r\n        case 'auth/wrong-password':\r\n          errorMessage = 'パスワードが間違っています。';\r\n          break;\r\n        default:\r\n          errorMessage = 'メールアドレスまたはパスワードが正しくありません。';\r\n      }\r\n      setError(errorMessage);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <h1>ログイン</h1>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      <form onSubmit={handleLogin}>\r\n        <div>\r\n          <label htmlFor=\"email\">メールアドレス:</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"password\">パスワード:</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\">ログイン</button>\r\n      </form>\r\n      <p>\r\n        アカウントをお持ちでない方は<Link to=\"/regist\">こちら</Link>から新規登録してください。\r\n      </p>\r\n      <Link to=\"/\" className=\"back-link\">ホームに戻る</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDt6q1zHrhElB3h3MeIgJSU_A99dYSxqTA\",\r\n  authDomain: \"graphical-tape-461512-s2.firebaseapp.com\",\r\n  projectId: \"graphical-tape-461512-s2\",\r\n  storageBucket: \"graphical-tape-461512-s2.firebasestorage.app\",\r\n  messagingSenderId: \"340005532348\",\r\n  appId: \"1:340005532348:web:bce57242bfe7d95dd6d6b9\",\r\n  measurementId: \"G-HD0KWRS43L\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst analytics = getAnalytics(app);\r\nconst db = getFirestore(app);\r\nconst auth = getAuth(app);\r\nconst storage = getStorage(app);\r\n\r\nexport { app, analytics, db, auth, storage };\r\n","import React, { useState } from 'react';\r\nimport { Link,useNavigate } from 'react-router-dom';\r\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\r\nimport { auth } from '../../firebase';\r\nimport './regist.css';\r\n\r\nconst Regist: React.FC = () => {\r\n    const [email, setEmail] = useState(''); \r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const navigate = useNavigate(); // React Routerのフックを使用して画面遷移を行う\r\n\r\n    const handleRegist = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        \r\n        // パスワード確認\r\n        if (password !== confirmPassword) {\r\n            alert('パスワードが一致しません');\r\n            return;\r\n        }\r\n\r\n        createUserWithEmailAndPassword(auth, email, password)\r\n            .then((userCredential) => {\r\n                // 新規登録成功\r\n                const user = userCredential.user;\r\n                console.log('新規登録成功:', user);\r\n                alert('新規登録が完了しました！');\r\n\r\n                // 新規登録後の処理 (例: ホーム画面へ遷移)\r\n                navigate('/dashboard'); // React Routerを使った画面遷移の例\r\n            })\r\n            .catch((error) => {\r\n                // エラー処理\r\n                const errorCode = error.code;\r\n                const errorMessage = error.message;\r\n                console.error('新規登録エラー:', errorCode, errorMessage);\r\n                \r\n                // エラーメッセージの日本語化\r\n                let errorMsg = 'エラーが発生しました';\r\n                switch (errorCode) {\r\n                    case 'auth/email-already-in-use':\r\n                        errorMsg = 'このメールアドレスは既に使用されています';\r\n                        break;\r\n                    case 'auth/weak-password':\r\n                        errorMsg = 'パスワードが弱すぎます（6文字以上必要）';\r\n                        break;\r\n                    case 'auth/invalid-email':\r\n                        errorMsg = '無効なメールアドレスです';\r\n                        break;\r\n                }\r\n                alert(errorMsg);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"regist\">\r\n            <h1>新規登録</h1>\r\n            <form onSubmit={handleRegist}>\r\n                <div>\r\n                    <label htmlFor=\"email\">メールアドレス:</label>\r\n                    <input \r\n                        name=\"email\" \r\n                        type=\"email\" \r\n                        placeholder=\"email@example.com\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"password\">パスワード:</label>\r\n                    <input \r\n                        name=\"password\" \r\n                        type=\"password\" \r\n                        placeholder=\"6文字以上のパスワード\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        required\r\n                        minLength={6}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"confirmPassword\">パスワード確認:</label>\r\n                    <input \r\n                        name=\"confirmPassword\" \r\n                        type=\"password\" \r\n                        placeholder=\"パスワードを再入力\"\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button type=\"submit\">新規登録</button>\r\n            </form>\r\n            <p>\r\n                既にアカウントをお持ちの方は\r\n                <Link to=\"/login\">ログイン</Link>\r\n                してください。\r\n            </p>\r\n            <Link to=\"/\">ホームに戻る</Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Regist;","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { collection, addDoc } from 'firebase/firestore';\r\nimport { auth,db } from '../../firebase';\r\n// import { useAuth } from '../hooks/auth'; // Firebase Authのカスタムフック (仮定)\r\n\r\ninterface ItemToBring {\r\n  name: string;\r\n  checked: boolean;\r\n}\r\n\r\nconst initialItemsToBring: ItemToBring[] = [\r\n  { name: '着替え', checked: false },\r\n  { name: '洗面用具', checked: false },\r\n  { name: 'パスポート', checked: false },\r\n  { name: '充電器', checked: false },\r\n  { name: 'カメラ', checked: false },\r\n  { name: '財布', checked: false },\r\n  { name: '薬', checked: false },\r\n  { name: '本', checked: false },\r\n  { name: '水筒', checked: false },\r\n  { name: '傘', checked: false },\r\n  { name: '帽子', checked: false },\r\n  { name: 'サングラス', checked: false },\r\n  { name: '靴', checked: false },\r\n  { name: '地図', checked: false },\r\n  { name: 'ガイドブック', checked: false },\r\n  { name: 'お土産リスト', checked: false },\r\n\r\n];\r\n\r\nconst CreateTravelPlanPage: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  // const { currentUser } = useAuth(); // ログインユーザー情報 (仮定)\r\n  const currentUser = { uid: 'test-user-uid' }; // 開発用ダミーUID\r\n\r\n  const [title, setTitle] = useState<string>(''); // 旅行タイトルを追加\r\n  const [startDate, setStartDate] = useState<Date | null>(null);\r\n  const [endDate, setEndDate] = useState<Date | null>(null);\r\n  const [members, setMembers] = useState<string[]>([]);\r\n  const [locationQuery, setLocationQuery] = useState<string>('');\r\n  const [itemsToBring, setItemsToBring] = useState<ItemToBring[]>(initialItemsToBring);\r\n  const [budget, setBudget] = useState<number | null>(null);\r\n  const [isSaving, setIsSaving] = useState<boolean>(false);\r\n  const [saveError, setSaveError] = useState<string | null>(null);\r\n\r\n  const handleMemberChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = event.target.value.trim();\r\n    if (value && !members.includes(value)) {\r\n      setMembers([...members, value]);\r\n    }\r\n    event.target.value = '';\r\n  };\r\n\r\n  const removeMember = (memberToRemove: string) => {\r\n    setMembers(members.filter((member) => member !== memberToRemove));\r\n  };\r\n\r\n  const handleLocationInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setLocationQuery(event.target.value);\r\n    // ここでAPIを呼び出して候補を取得する処理を実装\r\n  };\r\n\r\n  const handleroutesearch = async (query: string) => {\r\n    // ここでAPIを呼び出して場所検索を行う処理を実装\r\n    // 例: const results = await fetchPlaces(query);\r\n    // setLocationQuery(results);\r\n  }\r\n\r\n\r\n  const handleItemCheck = (index: number) => {\r\n    const newItems = [...itemsToBring];\r\n    newItems[index].checked = !newItems[index].checked;\r\n    setItemsToBring(newItems);\r\n  };\r\n\r\n  const handleAddItem = (itemName: string) => {\r\n    if (itemName.trim()) {\r\n      setItemsToBring([...itemsToBring, { name: itemName.trim(), checked: false }]);\r\n    }\r\n  };\r\n\r\n  const removeItem = (indexToRemove: number) => {\r\n    setItemsToBring(itemsToBring.filter((_, index) => index !== indexToRemove));\r\n  };\r\n\r\n  const handleSave = async (isDraft: boolean) => {\r\n    if (!currentUser?.uid) {\r\n      console.error('ユーザーがログインしていません。');\r\n      setSaveError('ログインが必要です。');\r\n      return;\r\n    }\r\n\r\n    setIsSaving(true);\r\n    setSaveError(null);\r\n\r\n    try {\r\n      const travelPlansCollection = collection(db, 'travelPlans');\r\n      await addDoc(travelPlansCollection, {\r\n        title: title || '無題の旅行', // タイトルがない場合はデフォルト\r\n        startDate: startDate ? new Date(startDate) : null,\r\n        endDate: endDate ? new Date(endDate) : null,\r\n        members: members,\r\n        destinations: [locationQuery], // 簡易的に場所検索の値を目的地として保存\r\n        itemsToBring: itemsToBring,\r\n        budget: budget || null,\r\n        createdBy: currentUser.uid,\r\n        createdAt: new Date(),\r\n        updatedAt: new Date(),\r\n        isDraft: isDraft,\r\n        schedule: [], // スケジュールはまだ未実装のため空配列\r\n        sharedWith: [], // 共有機能はまだ未実装\r\n        prefectureVisited: [], // 都道府県制覇機能はまだ未実装\r\n      });\r\n      setIsSaving(false);\r\n      navigate('/dashboard');\r\n    } catch (error: any) {\r\n      console.error('保存に失敗しました:', error);\r\n      setSaveError('旅行計画の保存に失敗しました。');\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>新規旅行計画を作成</h2>\r\n\r\n      {saveError && <p style={{ color: 'red' }}>{saveError}</p>}\r\n      {isSaving && <p>保存中です...</p>}\r\n\r\n      <div>\r\n        <label htmlFor=\"title\">タイトル:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <label>予定日:</label>\r\n        <input type=\"date\" onChange={(e) => setStartDate(new Date(e.target.value))} />\r\n        <input type=\"date\" onChange={(e) => setEndDate(new Date(e.target.value))} />\r\n      </div>\r\n\r\n      <div>\r\n        <label>メンバー:</label>\r\n        <input type=\"text\" placeholder=\"メンバーを追加\" onBlur={handleMemberChange} />\r\n        <ul>\r\n          {members.map((member) => (\r\n            <li key={member}>\r\n              {member} <button onClick={() => removeMember(member)}>×</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <div>\r\n        <label>場所:</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"場所を入力\"\r\n          value={locationQuery}\r\n          onChange={handleLocationInputChange}\r\n        />\r\n        {/* おすすめの場所リストなどは省略 */}\r\n      </div>\r\n\r\n      <div>\r\n        <h3>持ち物</h3>\r\n        <ul>\r\n          {itemsToBring.map((item, index) => (\r\n            <li key={index}>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={item.checked}\r\n                onChange={() => handleItemCheck(index)}\r\n              />\r\n              {item.name} <button onClick={() => removeItem(index)}>×</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"持ち物を追加\"\r\n            onBlur={(e) => handleAddItem(e.target.value)}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <label>予算:</label>\r\n        <input\r\n          type=\"number\"\r\n          value={budget === null ? '' : budget}\r\n          onChange={(e) => setBudget(e.target.value ? parseInt(e.target.value) : null)}\r\n        />\r\n        円\r\n      </div>\r\n\r\n      {/* スケジュール入力は省略 */}\r\n      <div>\r\n        <h3>予定</h3>\r\n        <p>（時間ごとの予定、ホテル、観光地登録などはここに表示・入力する予定）</p>\r\n      </div>\r\n\r\n      <button onClick={() => handleSave(true)} disabled={isSaving}>\r\n        下書き保存\r\n      </button>\r\n      <button onClick={() => handleSave(false)} disabled={isSaving}>\r\n        保存して完了\r\n      </button>\r\n      <button onClick={() => navigate('/dashboard')} disabled={isSaving}>\r\n        キャンセル\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateTravelPlanPage;","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Header from './components/Header/Header';\nimport Footer from './components/Footer/Footer';\nimport Home from './pages/Home/Home';\nimport About from './pages/About/About';\nimport Login from './pages/login/login';\nimport Regist from './pages/login/regist';\nimport CreateTravelPlanPage from './pages/Home/Newplan';\nimport './App.css';\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/about\" element={<About />} />\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/regist\" element={<Regist />} />\n          <Route path=\"/create-plan\" element={<CreateTravelPlanPage />} />\n          {/* 他のルートを追加する場合はここに記述 */}\n          {/* 例: <Route path=\"/profile\" element={<Profile />} /> */}\n          {/* 他のルートを追加する場合はここに記述 */}\n          {/* <Route path=\"/dashboard\" element={<Dashboard />} /> */}\n        </Routes>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}