[{"C:\\Users\\ru07k\\travel\\my-react-app\\src\\index.tsx":"1","C:\\Users\\ru07k\\travel\\my-react-app\\src\\App.tsx":"2","C:\\Users\\ru07k\\travel\\my-react-app\\src\\pages\\Home\\Newplan.tsx":"3","C:\\Users\\ru07k\\travel\\my-react-app\\src\\pages\\login\\login.tsx":"4","C:\\Users\\ru07k\\travel\\my-react-app\\src\\pages\\Home\\Home.tsx":"5","C:\\Users\\ru07k\\travel\\my-react-app\\src\\components\\Footer\\Footer.tsx":"6","C:\\Users\\ru07k\\travel\\my-react-app\\src\\pages\\About\\About.tsx":"7","C:\\Users\\ru07k\\travel\\my-react-app\\src\\components\\Header\\Header.tsx":"8","C:\\Users\\ru07k\\travel\\my-react-app\\src\\pages\\login\\regist.tsx":"9","C:\\Users\\ru07k\\travel\\my-react-app\\src\\firebase.js":"10"},{"size":218,"mtime":1748146040437,"results":"11","hashOfConfig":"12"},{"size":1224,"mtime":1748760988198,"results":"13","hashOfConfig":"12"},{"size":7570,"mtime":1748761236985,"results":"14","hashOfConfig":"12"},{"size":2745,"mtime":1748766317628,"results":"15","hashOfConfig":"12"},{"size":1139,"mtime":1748696763575,"results":"16","hashOfConfig":"12"},{"size":416,"mtime":1748146047734,"results":"17","hashOfConfig":"12"},{"size":324,"mtime":1748146051536,"results":"18","hashOfConfig":"12"},{"size":452,"mtime":1748146045815,"results":"19","hashOfConfig":"12"},{"size":4294,"mtime":1748697433452,"results":"20","hashOfConfig":"12"},{"size":1171,"mtime":1748697442590,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1l1q1bb",{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ru07k\\travel\\my-react-app\\src\\index.tsx",[],"C:\\Users\\ru07k\\travel\\my-react-app\\src\\App.tsx",[],"C:\\Users\\ru07k\\travel\\my-react-app\\src\\pages\\Home\\Newplan.tsx",["43","44"],"import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { collection, addDoc } from 'firebase/firestore';\r\nimport { auth,db } from '../../firebase';\r\n// import { useAuth } from '../hooks/auth'; // Firebase Authのカスタムフック (仮定)\r\n\r\ninterface ItemToBring {\r\n  name: string;\r\n  checked: boolean;\r\n}\r\n\r\nconst initialItemsToBring: ItemToBring[] = [\r\n  { name: '着替え', checked: false },\r\n  { name: '洗面用具', checked: false },\r\n  { name: 'パスポート', checked: false },\r\n  { name: '充電器', checked: false },\r\n  { name: 'カメラ', checked: false },\r\n  { name: '財布', checked: false },\r\n  { name: '薬', checked: false },\r\n  { name: '本', checked: false },\r\n  { name: '水筒', checked: false },\r\n  { name: '傘', checked: false },\r\n  { name: '帽子', checked: false },\r\n  { name: 'サングラス', checked: false },\r\n  { name: '靴', checked: false },\r\n  { name: '地図', checked: false },\r\n  { name: 'ガイドブック', checked: false },\r\n  { name: 'お土産リスト', checked: false },\r\n\r\n];\r\n\r\nconst CreateTravelPlanPage: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  // const { currentUser } = useAuth(); // ログインユーザー情報 (仮定)\r\n  const currentUser = { uid: 'test-user-uid' }; // 開発用ダミーUID\r\n\r\n  const [title, setTitle] = useState<string>(''); // 旅行タイトルを追加\r\n  const [startDate, setStartDate] = useState<Date | null>(null);\r\n  const [endDate, setEndDate] = useState<Date | null>(null);\r\n  const [members, setMembers] = useState<string[]>([]);\r\n  const [locationQuery, setLocationQuery] = useState<string>('');\r\n  const [itemsToBring, setItemsToBring] = useState<ItemToBring[]>(initialItemsToBring);\r\n  const [budget, setBudget] = useState<number | null>(null);\r\n  const [isSaving, setIsSaving] = useState<boolean>(false);\r\n  const [saveError, setSaveError] = useState<string | null>(null);\r\n\r\n  const handleMemberChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = event.target.value.trim();\r\n    if (value && !members.includes(value)) {\r\n      setMembers([...members, value]);\r\n    }\r\n    event.target.value = '';\r\n  };\r\n\r\n  const removeMember = (memberToRemove: string) => {\r\n    setMembers(members.filter((member) => member !== memberToRemove));\r\n  };\r\n\r\n  const handleLocationInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setLocationQuery(event.target.value);\r\n    // ここでAPIを呼び出して候補を取得する処理を実装\r\n  };\r\n\r\n  const handleroutesearch = async (query: string) => {\r\n    // ここでAPIを呼び出して場所検索を行う処理を実装\r\n    // 例: const results = await fetchPlaces(query);\r\n    // setLocationQuery(results);\r\n  }\r\n\r\n\r\n  const handleItemCheck = (index: number) => {\r\n    const newItems = [...itemsToBring];\r\n    newItems[index].checked = !newItems[index].checked;\r\n    setItemsToBring(newItems);\r\n  };\r\n\r\n  const handleAddItem = (itemName: string) => {\r\n    if (itemName.trim()) {\r\n      setItemsToBring([...itemsToBring, { name: itemName.trim(), checked: false }]);\r\n    }\r\n  };\r\n\r\n  const removeItem = (indexToRemove: number) => {\r\n    setItemsToBring(itemsToBring.filter((_, index) => index !== indexToRemove));\r\n  };\r\n\r\n  const handleSave = async (isDraft: boolean) => {\r\n    if (!currentUser?.uid) {\r\n      console.error('ユーザーがログインしていません。');\r\n      setSaveError('ログインが必要です。');\r\n      return;\r\n    }\r\n\r\n    setIsSaving(true);\r\n    setSaveError(null);\r\n\r\n    try {\r\n      const travelPlansCollection = collection(db, 'travelPlans');\r\n      await addDoc(travelPlansCollection, {\r\n        title: title || '無題の旅行', // タイトルがない場合はデフォルト\r\n        startDate: startDate ? new Date(startDate) : null,\r\n        endDate: endDate ? new Date(endDate) : null,\r\n        members: members,\r\n        destinations: [locationQuery], // 簡易的に場所検索の値を目的地として保存\r\n        itemsToBring: itemsToBring,\r\n        budget: budget || null,\r\n        createdBy: currentUser.uid,\r\n        createdAt: new Date(),\r\n        updatedAt: new Date(),\r\n        isDraft: isDraft,\r\n        schedule: [], // スケジュールはまだ未実装のため空配列\r\n        sharedWith: [], // 共有機能はまだ未実装\r\n        prefectureVisited: [], // 都道府県制覇機能はまだ未実装\r\n      });\r\n      setIsSaving(false);\r\n      navigate('/dashboard');\r\n    } catch (error: any) {\r\n      console.error('保存に失敗しました:', error);\r\n      setSaveError('旅行計画の保存に失敗しました。');\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>新規旅行計画を作成</h2>\r\n\r\n      {saveError && <p style={{ color: 'red' }}>{saveError}</p>}\r\n      {isSaving && <p>保存中です...</p>}\r\n\r\n      <div>\r\n        <label htmlFor=\"title\">タイトル:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <label>予定日:</label>\r\n        <input type=\"date\" onChange={(e) => setStartDate(new Date(e.target.value))} />\r\n        <input type=\"date\" onChange={(e) => setEndDate(new Date(e.target.value))} />\r\n      </div>\r\n\r\n      <div>\r\n        <label>メンバー:</label>\r\n        <input type=\"text\" placeholder=\"メンバーを追加\" onBlur={handleMemberChange} />\r\n        <ul>\r\n          {members.map((member) => (\r\n            <li key={member}>\r\n              {member} <button onClick={() => removeMember(member)}>×</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <div>\r\n        <label>場所:</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"場所を入力\"\r\n          value={locationQuery}\r\n          onChange={handleLocationInputChange}\r\n        />\r\n        {/* おすすめの場所リストなどは省略 */}\r\n      </div>\r\n\r\n      <div>\r\n        <h3>持ち物</h3>\r\n        <ul>\r\n          {itemsToBring.map((item, index) => (\r\n            <li key={index}>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={item.checked}\r\n                onChange={() => handleItemCheck(index)}\r\n              />\r\n              {item.name} <button onClick={() => removeItem(index)}>×</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"持ち物を追加\"\r\n            onBlur={(e) => handleAddItem(e.target.value)}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <label>予算:</label>\r\n        <input\r\n          type=\"number\"\r\n          value={budget === null ? '' : budget}\r\n          onChange={(e) => setBudget(e.target.value ? parseInt(e.target.value) : null)}\r\n        />\r\n        円\r\n      </div>\r\n\r\n      {/* スケジュール入力は省略 */}\r\n      <div>\r\n        <h3>予定</h3>\r\n        <p>（時間ごとの予定、ホテル、観光地登録などはここに表示・入力する予定）</p>\r\n      </div>\r\n\r\n      <button onClick={() => handleSave(true)} disabled={isSaving}>\r\n        下書き保存\r\n      </button>\r\n      <button onClick={() => handleSave(false)} disabled={isSaving}>\r\n        保存して完了\r\n      </button>\r\n      <button onClick={() => navigate('/dashboard')} disabled={isSaving}>\r\n        キャンセル\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateTravelPlanPage;","C:\\Users\\ru07k\\travel\\my-react-app\\src\\pages\\login\\login.tsx",[],"C:\\Users\\ru07k\\travel\\my-react-app\\src\\pages\\Home\\Home.tsx",[],"C:\\Users\\ru07k\\travel\\my-react-app\\src\\components\\Footer\\Footer.tsx",[],"C:\\Users\\ru07k\\travel\\my-react-app\\src\\pages\\About\\About.tsx",[],"C:\\Users\\ru07k\\travel\\my-react-app\\src\\components\\Header\\Header.tsx",[],"C:\\Users\\ru07k\\travel\\my-react-app\\src\\pages\\login\\regist.tsx",[],"C:\\Users\\ru07k\\travel\\my-react-app\\src\\firebase.js",[],{"ruleId":"45","severity":1,"message":"46","line":4,"column":10,"nodeType":"47","messageId":"48","endLine":4,"endColumn":14},{"ruleId":"45","severity":1,"message":"49","line":64,"column":9,"nodeType":"47","messageId":"48","endLine":64,"endColumn":26},"@typescript-eslint/no-unused-vars","'auth' is defined but never used.","Identifier","unusedVar","'handleroutesearch' is assigned a value but never used."]